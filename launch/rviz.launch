<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="0.5"/>
  <arg name="y_pos" default="0.5"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rbe3002code02)/worlds/maze2.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description"/>

  <param name="tb3_model" value="$(arg model)"/>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rbe3002code02)/config/erikas_trying.rviz"/>

  <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="log" args="scan:=scan">
    <!-- maximum range of the laser (probably in meters?) -->
    <!-- If regions with no obstacles within the range of the sensor should appear as free space in the map,
    set maxUrange < maximum range of the real sensor <= maxRange -->
    <!-- max range value from https://www.robotis.us/turtlebot-3/ claims 3,500 mm -->
    <!-- <param name="maxUrange" value="3.4" /> -->  <!-- def: 80.0 -->
    <!-- <param name="maxRange" value="3.6" /> -->  <!-- no default -->
    <!-- defines map size (in meters) -->
    <param name="xmin" value="-10.0" /> <!-- def: -100.0 -->
    <param name="ymin" value="-10.0" /> <!-- def: -100.0 -->
    <param name="xmax" value="10.0" /> <!-- def: 100.0 -->
    <param name="ymax" value="10.0" /> <!-- def: 100.0 -->
    <!-- resolution of the map (in metres per occupancy grid block) -->
    <param name="delta" value="0.05" /> <!-- def: 0.05 -->
  </node>

  <node name="astar" pkg="rbe3002code02" type="A_Star.py" output ="screen"/>

  <node name="main" pkg="rbe3002code02" type="main.py" output="screen">
    <param name="x_pos" value="$(arg x_pos)" />
    <param name="y_pos" value="$(arg x_pos)" />
  </node>

  <!--node name="costmap" pkg="rbe3002code02" type="cost_map.py" output ="screen"/ -->
  <node name="expandmap" pkg="rbe3002code02" type="ExpandMap.py" output ="screen"/>
  
  <node name="Robot" pkg="rbe3002code02" type="Robot.py" output="screen">
    <param name="rotate_speed" value="0.1" />
    <param name="drive_speed" value="0.1" />
    <param name="dist_threshold" value="0.01" />
    <param name="rotate_tolerance" value="0.01" />
    <param name="drive_tolerance" value="0.01" />
    <param name="x_pos" value="$(arg x_pos)" />
    <param name="y_pos" value="$(arg x_pos)" />
  </node>

  <!--<node name="find_frontiers" pkg="rbe3002code02" type="find_frontiers.py" output="screen"/>-->

</launch>
